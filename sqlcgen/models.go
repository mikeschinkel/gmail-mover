// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlcgen

import (
	"database/sql"
)

type Authority struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type ContentType struct {
	ID   int64  `json:"id"`
	Type string `json:"type"`
}

type Header struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type Message struct {
	ID            int64          `json:"id"`
	Type          interface{}    `json:"type"`
	TypeName      sql.NullString `json:"type_name"`
	TypeShortName sql.NullString `json:"type_short_name"`
	PlatformID    int64          `json:"platform_id"`
	FromID        interface{}    `json:"from_id"`
	UnixDate      int64          `json:"unix_date"`
	Date          sql.NullString `json:"date"`
	Subject       interface{}    `json:"subject"`
	Content       string         `json:"content"`
	MessageID     string         `json:"message_id"`
	ContentTypeID int64          `json:"content_type_id"`
	IDGenerated   interface{}    `json:"id_generated"`
	Compression   interface{}    `json:"compression"`
	RawContent    interface{}    `json:"raw_content"`
}

type MessageHeader struct {
	ID        int64  `json:"id"`
	MessageID int64  `json:"message_id"`
	HeaderID  int64  `json:"header_id"`
	Value     string `json:"value"`
}

type MessageParticipant struct {
	ID              int64       `json:"id"`
	MessageID       int64       `json:"message_id"`
	ParticipantID   int64       `json:"participant_id"`
	ParticipantType interface{} `json:"participant_type"`
}

type MessageTag struct {
	ID        int64 `json:"id"`
	MessageID int64 `json:"message_id"`
	TagID     int64 `json:"tag_id"`
}

type Metadata struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

type Participant struct {
	ID          int64         `json:"id"`
	PlatformID  int64         `json:"platform_id"`
	Username    string        `json:"username"`
	AuthorityID sql.NullInt64 `json:"authority_id"`
}

type ParticipantAuthority struct {
	ID         int64  `json:"id"`
	PlatformID int64  `json:"platform_id"`
	Name       string `json:"name"`
}

type Platform struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
}

type PlatformHistory struct {
	ID         int64         `json:"id"`
	PlatformID int64         `json:"platform_id"`
	Name       string        `json:"name"`
	IsCurrent  bool          `json:"is_current"`
	StartDate  int64         `json:"start_date"`
	EndDate    sql.NullInt64 `json:"end_date"`
}

type Tag struct {
	ID       int64       `json:"id"`
	Tag      string      `json:"tag"`
	Type     interface{} `json:"type"`
	ParentID interface{} `json:"parent_id"`
}
